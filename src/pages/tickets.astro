---
import Layout from "../layouts/Layout.astro";
import { TicketsHUB } from "../components/Tickets/TicketsHUB";
import { stateManager } from "@/stores/stores";
import { supabase } from "@/lib/supabase";
const state = Astro.url.searchParams.get("app");
if (state) {
  stateManager.setSerializedState(state);
}
let { tickets, drawId } = stateManager.getState();

let raffleId;
if (!drawId) {
  const [drawData] = await Promise.all([
    supabase
      .from("draw")
      .select("raffleId, limitDate, playDate, raffle(*)")
      .single(),
  ]);
  stateManager.setState({ drawId: drawData?.data?.id });
  raffleId = drawData?.data?.raffleId;
}
if (!tickets) {
  const [ticketsData] = await Promise.all([
    supabase
      .from("ticket")
      .select("number, digits, status, reservedUntil, id")
      .eq("raffleId", raffleId),
  ]);
  stateManager.setState({ tickets: ticketsData.data });
  tickets = ticketsData.data;
}
const checkTicketsStatus = () => {
  tickets.forEach((ticket: any) => {
    if (ticket.status === "reserved") {
      const reservedUntil = new Date(ticket.reservedUntil).getTime();
      const now = new Date().getTime();
      // if (!reservedUntil) return;
      console.log({ reservedUntil, now });
      if (reservedUntil < now || reservedUntil === null) {
        console.log("reserved time expired");
        ticket.status = "available";
        console.log(ticket);
        supabase
          .from("ticket")
          .update({ status: "available" })
          .eq("id", ticket.id)
          .then((res: any) => console.log({ res }));
      }
    }
  });
};
checkTicketsStatus();
---

<Layout title="Tickets | 4Negrita">
  <div class="min-h-screen bg-background flex flex-col">
    <TicketsHUB client:only createdTickets={tickets} />
  </div>
</Layout>
