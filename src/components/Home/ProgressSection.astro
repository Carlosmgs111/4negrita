---
import { Progress } from "@/components/ui/progress";
import { Button } from "@/components/ui/button";
import Countdown from "@/components/Utilities/Countdown.astro";
const {
  totalRaised = 0,
  ticketPrice = 0,
  totalTickets = 0,
  daysLeftToPlay = 0,
} = Astro.props;
const currentAmount = totalRaised;
const targetAmount = ticketPrice * totalTickets;
const progressPercentage = (currentAmount / targetAmount) * 100;
const targetDate = new Date(Date.now() + daysLeftToPlay * 24 * 60 * 60 * 1000)
  .toISOString()
  .split("T")[0];
console.log({ targetDate });
---

<section class="bg-accent py-16">
  <div class="container-section">
    <div class="max-w-4xl mx-auto text-center">
      <h2 class="text-2xl md:text-3xl font-bold mb-8">
        Cada Boleto Nos Acerca a la Meta
      </h2>
      <div class="bg-white rounded-xl p-6 shadow-md mb-8 gap-6 flex flex-col">
        <div class="flex flex-col md:flex-row justify-between mb-4">
          <div class="mb-4 md:mb-0">
            <span class="block text-3xl font-bold text-heart-600"
              >${currentAmount.toLocaleString()}</span
            >
            <span class="text-gray-500">recaudados hasta ahora</span>
          </div>
          <div>
            <span class="block text-3xl font-bold"
              >${targetAmount.toLocaleString()}</span
            >
            <span class="text-gray-500">objetivo total</span>
          </div>
        </div>

        <div class="space-y-2 mb-6">
          <Progress client:visible value={progressPercentage} className="h-3" />
          <div class="flex justify-between text-sm text-gray-500">
            <span>{progressPercentage.toFixed(0)}% completado</span>
            <span
              >{(targetAmount - currentAmount).toLocaleString()} restantes</span
            >
          </div>
        </div>

        <span class="text-l font-thin">
          Tambien puedes donar ü´∂, cualquier peque√±o aporte nos ayudara a alcanzar la meta üéñÔ∏è.
        </span>
        <div class="flex flex-wrap gap-3 justify-center">
          {
            [2000, 5000, 10000, 20000].map((amount) => (
              <Button
                client:visible
                key={amount}
                variant={amount === 2000 ? "default" : "outline"}
                className={
                  amount === 2000
                    ? "bg-heart-500 hover:bg-heart-600"
                    : "border-heart-200 text-heart-600"
                }
              >
                ${amount}
              </Button>
            ))
          }
          <Button
            client:visible
            variant="outline"
            className="border-heart-200 text-heart-600">Otra cantidad</Button
          >
        </div>
      </div>
    </div>
    <div class="animate-pulse-gentle">
      <Countdown className="max-w-4xl mx-auto" title="¬°Quedan solo" footer="para el sorteo!" targetDate={targetDate} />
    </div>
  </div>
</section>
